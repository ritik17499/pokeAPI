{"ast":null,"code":"var _jsxFileName = \"/Users/tesa/Documents/toko/pokeapi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { getPokemon, getAllPokemon } from './Services/pokeService';\nimport PokemonList from '../src/Pages/pokemonList';\nimport PokemonDetail from '../src/Pages/pokemonDetail';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, isLoading] = useState(true);\n  const apiURL = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(apiURL);\n      await loadPokemon(response.results);\n      isLoading(false);\n      console.log(response);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonGet = await getPokemon(pokemon);\n      return pokemonGet;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridContainer\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: pokemonData.map((pokemon, i) => {\n            return /*#__PURE__*/_jsxDEV(PokemonList, {\n              pokemon: pokemon\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pokemonDetail\",\n          children: /*#__PURE__*/_jsxDEV(PokemonDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"+O5VMpOfogOZxss8ZRkIwaGbf9I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tesa/Documents/toko/pokeapi/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","getPokemon","getAllPokemon","PokemonList","PokemonDetail","App","pokemonData","setPokemonData","loading","isLoading","apiURL","fetchData","response","loadPokemon","results","console","log","data","_pokemonData","Promise","all","map","pokemon","pokemonGet","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,OAAD,EAAUC,SAAV,IAAuBb,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMc,MAAM,GAAG,mCAAf;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMV,aAAa,CAACQ,MAAD,CAAlC;AACA,YAAMG,WAAW,CAACD,QAAQ,CAACE,OAAV,CAAjB;AACAL,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD;;AACDD,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;;AAUA,QAAME,WAAW,GAAG,MAAOI,IAAP,IAAgB;AAClC,QAAIC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAL,CAAS,MAAMC,OAAN,IAAiB;AAC7D,UAAIC,UAAU,GAAG,MAAMtB,UAAU,CAACqB,OAAD,CAAjC;AACA,aAAOC,UAAP;AACD,KAHoC,CAAZ,CAAzB;;AAIAhB,IAAAA,cAAc,CAACW,YAAD,CAAd;AACD,GAND;;AAQA,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,8BASE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACGV,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBACN,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,oBACGF,WAAW,CAACe,GAAZ,CAAgB,CAACC,OAAD,EAAUE,CAAV,KAAgB;AAC/B,gCAAO,QAAC,WAAD;AAAqB,cAAA,OAAO,EAAEF;AAA9B,eAAkBE,CAAlB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATF,eAmBE;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,gBAAlB;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AA6BD;;GApDQnB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { getPokemon, getAllPokemon } from './Services/pokeService'\nimport PokemonList from '../src/Pages/pokemonList'\nimport PokemonDetail from '../src/Pages/pokemonDetail'\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([])\n  const [loading, isLoading] = useState(true)\n  const apiURL = 'https://pokeapi.co/api/v2/pokemon'\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(apiURL)\n      await loadPokemon(response.results)\n      isLoading(false)\n      console.log(response)\n    }\n    fetchData()\n  }, [])\n\n  const loadPokemon = async (data) => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonGet = await getPokemon(pokemon)\n      return pokemonGet\n    }))\n    setPokemonData(_pokemonData)\n  }\n\n  return (\n    <>\n    <Router>\n      {/* <div className={classes.root}>\n        <AppBar position='static' className={classes.appbar}>\n          <Toolbar variant='dense'>\n            Pokemon\n          </Toolbar>\n        </AppBar>\n      </div> */}\n\n      <div className='gridContainer'>\n        {loading ? <h1>Loading...</h1> : (\n          <Route exact path='/'>\n            {pokemonData.map((pokemon, i) => {\n              return <PokemonList key={i} pokemon={pokemon} />\n            })}\n          </Route>\n        )}\n      </div>\n      \n      <div>\n        <Route exact path='/pokemonDetail'>\n          <PokemonDetail/>\n        </Route>\n      </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}