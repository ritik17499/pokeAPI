{"ast":null,"code":"var _jsxFileName = \"/Users/tesa/Documents/toko/pokeapi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { getPokemon, getAllPokemon } from './Services/pokeService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport PokemonList from '../src/Pages/pokemonList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  /*style appBar*/\n  root: {\n    flexGrow: 1\n  },\n  appbar: {\n    backgroundColor: '#34656d'\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, isLoading] = useState(true);\n  const apiURL = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(apiURL);\n      await loadPokemon(response.results);\n      isLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const loadPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonGet = await getPokemon(pokemon);\n      return pokemonGet;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"static\",\n          className: classes.appbar,\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            variant: \"dense\",\n            children: \"Pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/pokemonList\",\n          children: pokemonData.map((pokemon, i) => {\n            return /*#__PURE__*/_jsxDEV(PokemonList, {\n              pokemon: pokemon\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"6asheS/RMHjidxTU52bOnSsLf8c=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tesa/Documents/toko/pokeapi/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","getPokemon","getAllPokemon","makeStyles","AppBar","Toolbar","PokemonList","useStyles","theme","root","flexGrow","appbar","backgroundColor","App","classes","pokemonData","setPokemonData","loading","isLoading","apiURL","fetchData","response","loadPokemon","results","data","_pokemonData","Promise","all","map","pokemon","pokemonGet","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACrC;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAF+B;AAKrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE;AADX;AAL6B,CAAL,CAAN,CAA5B;;AAUA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACsB,OAAD,EAAUC,SAAV,IAAuBvB,QAAQ,CAAC,IAAD,CAArC;AACA,QAAMwB,MAAM,GAAG,mCAAf;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewB,SAAf,GAA2B;AACzB,UAAIC,QAAQ,GAAG,MAAMnB,aAAa,CAACiB,MAAD,CAAlC;AACA,YAAMG,WAAW,CAACD,QAAQ,CAACE,OAAV,CAAjB;AACAL,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACDE,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,WAAW,GAAG,MAAOE,IAAP,IAAgB;AAClC,QAAIC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,GAAL,CAAS,MAAMC,OAAN,IAAiB;AAC7D,UAAIC,UAAU,GAAG,MAAM7B,UAAU,CAAC4B,OAAD,CAAjC;AACA,aAAOC,UAAP;AACD,KAHoC,CAAZ,CAAzB;;AAIAd,IAAAA,cAAc,CAACS,YAAD,CAAd;AACD,GAND;;AAQA,sBACE;AAAA,2BACA,QAAC,MAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEX,OAAO,CAACL,IAAxB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,QAAjB;AAA0B,UAAA,SAAS,EAAEK,OAAO,CAACH,MAA7C;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,MAAD;AAAA,kBACGM,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBACN,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,cAAlB;AAAA,oBACGF,WAAW,CAACa,GAAZ,CAAgB,CAACC,OAAD,EAAUE,CAAV,KAAgB;AAC/B,gCAAO,QAAC,WAAD;AAAqB,cAAA,OAAO,EAAEF;AAA9B,eAAkBE,CAAlB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAuBD;;GA9CQlB,G;UACSN,S;;;KADTM,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { getPokemon, getAllPokemon } from './Services/pokeService'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport PokemonList from '../src/Pages/pokemonList'\nimport './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  /*style appBar*/\n  root: {\n    flexGrow: 1,\n  },\n  appbar: {\n    backgroundColor: '#34656d'\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState([])\n  const [loading, isLoading] = useState(true)\n  const apiURL = 'https://pokeapi.co/api/v2/pokemon'\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(apiURL)\n      await loadPokemon(response.results)\n      isLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  const loadPokemon = async (data) => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonGet = await getPokemon(pokemon)\n      return pokemonGet\n    }))\n    setPokemonData(_pokemonData)\n  }\n\n  return (\n    <>\n    <Router>\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appbar}>\n          <Toolbar variant=\"dense\">\n            Pokemon\n          </Toolbar>\n        </AppBar>\n      </div>\n\n      <Switch>\n        {loading ? <h1>Loading...</h1> : (\n          <Route exact path='/pokemonList'>\n            {pokemonData.map((pokemon, i) => {\n              return <PokemonList key={i} pokemon={pokemon} />\n            })}\n          </Route>\n        )}\n      </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}